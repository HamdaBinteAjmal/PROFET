/* 
 * PROFET Copyright 2015 (c) Data Mining and Machine Learning Group,
 * National University of Ireland Galway.  
 * This file is a part of PROFET  
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package MainInterface;

import MainInterface.Homescreen.Homescreen;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JFrame;
import javax.swing.UIManager;
import EquationEditor.Display.*;
import EquationEditor.Tree.MathObject;
import Nodes.EquationInfo;
import RunInference.Run;
import java.awt.Container;
import java.awt.Cursor;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.RootPaneContainer;
/**
 *
 * @author Administrator
 */
public class MainForm 
{
    

public static class MainFormInner extends JFrame implements ActionListener{

    public static SplitPanel mainPanel;
    public static Toolbar toolbar;
    private static EquationEditorPanel equationEditor;
    private static JPanel currentWindow ;
    
    //private String DBNname = "Untitled";
    //private MainInterface.Timestep TimestepPanel;
    //private ConfusedNodes confusedPanel;
    /**
     * Creates new form MainForm
     */
    public MainFormInner() {
        
        super();
        initComponents();
        Container contentPane = getContentPane();
        contentPane.setLayout(new BorderLayout());
        mainPanel = new SplitPanel();
        toolbar = new Toolbar();
        contentPane.add(mainPanel, BorderLayout.CENTER);
        contentPane.add(toolbar, BorderLayout.PAGE_START);
        equationEditor = new EquationEditorPanel(this);
       
        //TimestepPanel = new Timestep();
        //confusedPanel = new ConfusedNodes();
        currentWindow = null;
         OpenHomeScreen();
        ImageIcon img = new ImageIcon("Images/LOGO.png");
        AddLogo();
        pack();      
       
    }
    
    private void AddLogo()
    {
        ImageIcon newProIcon = new ImageIcon();
        
    //first button
    URL imageURL = Toolbar.class.getResource("Images/LOGO.png");
    if (imageURL != null) {  
       
       newProIcon = new ImageIcon(imageURL);
    }
    this.setIconImage(newProIcon.getImage());
    this.setTitle("PROFET");
    }
    public static void OpenHomeScreen()
    {
        Homescreen home = new Homescreen();
        
        ChangeView((JPanel) home);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
       
    public void actionPerformed(ActionEvent e) {
        String command = e.getActionCommand();
        
        
    }
    public static void DisplayEquationEditor()
    {
        
        if (currentWindow instanceof EquationEditorPanel)
        {
            //do nothing
        }
        else
        {
            equationEditor.NewEquation();
            ChangeView(equationEditor);
        }
    }
    public static void ChangeView(JPanel panel)
    {
        currentWindow = panel;
        mainPanel.ChangeView(panel);
        mainPanel.setVisible(true);
    }
    public static void DisplayEquationEditor(MathObject obj)
    {
        equationEditor.ExistingEquation(obj);
        mainPanel.ChangeView(equationEditor);
        mainPanel.setVisible(true);
    }
    public static void AddEquation(EquationInfo eq)//MathObject equationExpression, String eqStr, InputComponent[] inputComponents)
    {
      Tree.TreeStatic.AddEquation(eq);
    }
    
    public  static void GenerateDBN()
    {
        if (currentWindow instanceof ViewDBN.ViewDBNInner)
        {
            //do nothing
        }
        else
        {
            
            Tree.TreeStatic.OpenViewDBNWindow();
        }
    }
    
    public static void RunInference()
    {
        if (currentWindow instanceof Run)
        {
            //do nothing
        }
        else
        {
            Tree.TreeStatic.OpenRunInferenceWindow();
        }
        //Tree.TreeStatic.RunInference();
    }
   public static void OpenNewProject()
   {
       Tree.TreeStatic.ClearExistingWork();
       OpenHomeScreen();
   }
   public static void LoadProject()
   {
       /**/
       Tree.TreeStatic.LoadProject();
   }
   public static void SaveProject()
   {
       Tree.TreeStatic.SaveProject();
   }
   
   public static void NextScreen()
   {
     //  Tree.TreeStatic.NextScreen(currentWindow);
   }
   public static void PreviousScreen()
   {
     //  Tree.TreeStatic.PreviousScreen(currentWindow);
   }
   public static void SetWaitCursor()
   {
        RootPaneContainer root =
      ((RootPaneContainer) mainPanel.getTopLevelAncestor()); 
   // root.getGlassPane().setCursor(WAIT_CURSOR);
        Cursor c = Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR);
        
        root.getGlassPane().setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
      // mainPanel.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        root.getGlassPane().setVisible(true);
   }
   public static void SetDefaultCursor()
   {
          RootPaneContainer root =
      ((RootPaneContainer) mainPanel.getTopLevelAncestor()); 
   // root.getGlassPane().setCursor(WAIT_CURSOR);
        root.getGlassPane().setCursor(Cursor.getDefaultCursor());
      // mainPanel.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        root.getGlassPane().setVisible(true);
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
public static void main(String args[]) {
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch(Exception e)
        {
        
        }
//        PlasticLookAndFeel.setPlasticTheme(new DesertBlue());
//   try {
//      UIManager.setLookAndFeel(new Plastic3DLookAndFeel());
//   } catch (Exception e) {}
            
          
           // UIManager.getSystemLookAndFeelClassName());
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
            
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>
           
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm.MainFormInner().setVisible(true);
            }
        });
   }
}
